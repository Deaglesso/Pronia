@model PaginationVM<Tag>
@{
    int count = (Model.CurrentPage - 1) * Model.Limit;
}
@{
    string toasterMessage = TempData["ToasterMessage"] as string;
}



<div class="col-lg-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <div class="d-flex justify-content-between">
                <h4 class="card-title">Tag List</h4>
                @if (!string.IsNullOrEmpty(toasterMessage))
                {

                    <p class="btn btn-inverse-success btn-fw " style="display: inline-flex; align-items: center;" id="myParagraph">@toasterMessage &nbsp;&nbsp;<span style="margin-top: -1px; margin-left: 3px" class="close-button text-danger" onclick="closeParagraph()"><i class="mdi mdi-close-circle-outline"></i></span></p>

                    <script>
                        function closeParagraph() {
                            var paragraph = document.getElementById("myParagraph");


                            paragraph.style.display = "none";
                        }
                        setTimeout(closeParagraph, 5000);
                    </script>
                }
                <a asp-action="Create" class="btn btn-inverse-success btn-fw "><i class="mdi mdi-plus-circle-outline"></i> <h6>Create</h6></a>
            </div>
            

            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Name</th>
                            <th>Item Count</th>
                            <th class="d-flex justify-content-end"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items)
                        {
                            count++;
                            <tr>
                                <td>@count</td>
                                <td>@item.Name</td>
                                <td class="text-success"> @item.ProductTags.Count()</td>
                                <td class="d-flex justify-content-end">
                                    <a asp-action="Detail" asp-route-id="@item.Id" class="btn btn-inverse-primary btn-fw" style="display: inline-flex; align-items: center; margin-left: 6px;">
                                        <i class="mdi mdi-information-outline"></i> <span style="margin-top: -1px; margin-left: 3px">Details</span>
                                    </a>



                                    <a asp-action="Update" asp-route-id="@item.Id" class="btn btn-inverse-warning btn-fw" style="display: inline-flex; align-items: center; margin-left: 6px;">
                                        <i class="mdi mdi-pencil"></i> <span style="margin-top: -1px; margin-left: 3px">Update</span>
                                    </a>

                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-inverse-danger btn-fw" style="display: inline-flex; align-items: center; margin-left: 6px;">
                                        <i class="mdi mdi-delete"></i> <span style="margin-top: -1px; margin-left: 3px">Delete</span>
                                    </a>

                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center">
                <li class="page-item  @(1>=Model.CurrentPage ? "disabled " : "")">
                    <a class="page-link" asp-route-page="@(Model.CurrentPage-1)" tabindex="-1">Previous</a>
                </li>
                @for (int i = 0; i < Model.TotalPage; i++)
                {
                    <li class="page-item @(i==Model.CurrentPage-1? "disabled active": "")"><a class="page-link" asp-route-page="@(i+1)">@(i + 1)</a></li>

                }
                <li class="page-item  @(Model.TotalPage<=Model.CurrentPage ? "disabled " : "")">

                    <a class="page-link" asp-route-page="@(Model.CurrentPage+1)">Next</a>
                </li>
            </ul>
        </nav>
    </div>
</div>